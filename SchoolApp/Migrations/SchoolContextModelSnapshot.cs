// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApp.DAL.Models;

namespace SchoolApp.Web.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolApp.DAL.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassTeacherId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ClassTeacherId");

                    b.ToTable("Grades");

                    b.HasData(
                        new { Id = 1, ClassTeacherId = 3, Name = "1А" },
                        new { Id = 2, ClassTeacherId = 4, Name = "2А" },
                        new { Id = 3, ClassTeacherId = 5, Name = "3А" }
                    );
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Pupil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Gender");

                    b.Property<int?>("GradePropId");

                    b.Property<string>("Name");

                    b.Property<string>("SecondName");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("GradePropId");

                    b.ToTable("Pupils");

                    b.HasData(
                        new { Id = 1, Birthday = new DateTime(2006, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Арина", SecondName = "Юрьевна", Surname = "Агатьева" },
                        new { Id = 2, Birthday = new DateTime(2007, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Пальмира", SecondName = "Гурьевна", Surname = "Алексеева" },
                        new { Id = 3, Birthday = new DateTime(2008, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Феликс", SecondName = "Александрович", Surname = "Алексеев" },
                        new { Id = 4, Birthday = new DateTime(2006, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Елена", SecondName = "Андреевна", Surname = "Григорьева" },
                        new { Id = 5, Birthday = new DateTime(2007, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Иван", SecondName = "Юрьевич", Surname = "Васильев" },
                        new { Id = 6, Birthday = new DateTime(2008, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Екатерина", SecondName = "Юрьевна", Surname = "Борисова" },
                        new { Id = 7, Birthday = new DateTime(2006, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Константин", SecondName = "Сергеевич", Surname = "Исаков" },
                        new { Id = 8, Birthday = new DateTime(2007, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Анастасия", SecondName = "Анатольевна", Surname = "Жидова" },
                        new { Id = 9, Birthday = new DateTime(2008, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Александр", SecondName = "Леонидович", Surname = "Данилов" },
                        new { Id = 10, Birthday = new DateTime(2006, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Анжелика", SecondName = "Леонидовна", Surname = "Николаева" },
                        new { Id = 11, Birthday = new DateTime(2007, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Екатерина", SecondName = "Николаевна", Surname = "Клементьева" },
                        new { Id = 12, Birthday = new DateTime(2008, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Иван", SecondName = "Александрович", Surname = "Иванов" },
                        new { Id = 13, Birthday = new DateTime(2006, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Елена", SecondName = "Васильевна", Surname = "Родионова" },
                        new { Id = 14, Birthday = new DateTime(2007, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Кирилл", SecondName = "Андреевич", Surname = "Николаев" },
                        new { Id = 15, Birthday = new DateTime(2008, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Анна", SecondName = "Игоревна", Surname = "Николаева" },
                        new { Id = 16, Birthday = new DateTime(2006, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Владимир", SecondName = "Николаевич", Surname = "Фёдоров" },
                        new { Id = 17, Birthday = new DateTime(2007, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Юрий", SecondName = "Александрович", Surname = "Терентьев" },
                        new { Id = 18, Birthday = new DateTime(2008, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Анна", SecondName = "Александровна", Surname = "Семёнова" },
                        new { Id = 19, Birthday = new DateTime(2005, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Дмитрий", SecondName = "Михайлович", Surname = "Гурьев" },
                        new { Id = 20, Birthday = new DateTime(2009, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Станислав", SecondName = "Витальевич", Surname = "Александров" },
                        new { Id = 21, Birthday = new DateTime(2007, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Ассоль", SecondName = "Львовна", Surname = "Александрова" },
                        new { Id = 22, Birthday = new DateTime(2007, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Андрей", SecondName = "Игоревич", Surname = "Исаев" },
                        new { Id = 23, Birthday = new DateTime(2010, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Ксения", SecondName = "Сергеевна", Surname = "Иванова" },
                        new { Id = 24, Birthday = new DateTime(2011, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Женский", Name = "Анастасия", SecondName = "Юрьевна", Surname = "Данилова" },
                        new { Id = 25, Birthday = new DateTime(2012, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), Gender = "Мужской", Name = "Кирилл", SecondName = "Владимирович", Surname = "Илларионов" }
                    );
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Subject", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new { Id = 1, Name = "Математика" },
                        new { Id = 2, Name = "Физика" },
                        new { Id = 3, Name = "Химия" },
                        new { Id = 4, Name = "Русский язык" },
                        new { Id = 5, Name = "Информатика" },
                        new { Id = 6, Name = "Ин. язык" },
                        new { Id = 7, Name = "Биология" },
                        new { Id = 8, Name = "История" },
                        new { Id = 9, Name = "Трудовое воспитание" },
                        new { Id = 10, Name = "Физкультура" }
                    );
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Post");

                    b.Property<string>("SecondName");

                    b.Property<int?>("SubjectId");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new { Id = 1, Name = "Дарья", Post = "Директор", SecondName = "Артуровна", SubjectId = 1, Surname = "Константинова" },
                        new { Id = 2, Name = "Людмила", Post = "Завуч", SecondName = "Владиславовна", SubjectId = 2, Surname = "Николаева" },
                        new { Id = 3, Name = "Алексей", Post = "Учитель", SecondName = "Вячеславович", SubjectId = 3, Surname = "Павлов" },
                        new { Id = 4, Name = "Игорь", Post = "Учитель", SecondName = "Валерьевич", SubjectId = 4, Surname = "Кузьмин" },
                        new { Id = 5, Name = "Дмитрий", Post = "Учитель", SecondName = "Григорьевич", SubjectId = 5, Surname = "Максимов" },
                        new { Id = 6, Name = "Сергей", Post = "Учитель", SecondName = "Александрович", SubjectId = 6, Surname = "Осанов" },
                        new { Id = 7, Name = "Виктория", Post = "Учитель", SecondName = "Витальевна", SubjectId = 7, Surname = "Филиппова" },
                        new { Id = 8, Name = "Анастасия", Post = "Учитель", SecondName = "Ивановна", SubjectId = 8, Surname = "Козлова" },
                        new { Id = 9, Name = "Елена", Post = "Учитель", SecondName = "Сергеевна", SubjectId = 9, Surname = "Максимова" },
                        new { Id = 10, Name = "Евгения", Post = "Учитель", SecondName = "Игоревна", SubjectId = 10, Surname = "Николаева" }
                    );
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.TeacherGrade", b =>
                {
                    b.Property<int>("TeacherId");

                    b.Property<int>("GradeId");

                    b.HasKey("TeacherId", "GradeId");

                    b.HasIndex("GradeId");

                    b.ToTable("TeacherGrades");
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Name = "admin", Password = "admin" },
                        new { Id = 2, Name = "учитель", Password = "учитель" },
                        new { Id = 3, Name = "администратор", Password = "администратор" }
                    );
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Grade", b =>
                {
                    b.HasOne("SchoolApp.DAL.Models.Teacher", "ClassTeacher")
                        .WithMany()
                        .HasForeignKey("ClassTeacherId");
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Pupil", b =>
                {
                    b.HasOne("SchoolApp.DAL.Models.Grade", "GradeProp")
                        .WithMany("Pupils")
                        .HasForeignKey("GradePropId");
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.Teacher", b =>
                {
                    b.HasOne("SchoolApp.DAL.Models.Subject", "SubjectName")
                        .WithMany()
                        .HasForeignKey("SubjectId");
                });

            modelBuilder.Entity("SchoolApp.DAL.Models.TeacherGrade", b =>
                {
                    b.HasOne("SchoolApp.DAL.Models.Grade", "grade")
                        .WithMany("TeacherGrades")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolApp.DAL.Models.Teacher", "teacher")
                        .WithMany("TeacherGrades")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
